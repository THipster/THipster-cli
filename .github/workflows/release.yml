name: "Publish a new release"
on:
  push:
    branches:
    - main

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    permissions: write-all
    environment:
      name: pypi
      url: https://pypi.org/project/thipstercli

    steps:
    - name: Temporarily disable "include administrators" branch protection
      uses: benjefferies/branch-protection-bot@master
      if: always()
      with:
        access_token: ${{ secrets.RELEASE_ACCESS_TOKEN }}
        branch: ${{ github.event.repository.default_branch }}

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.RELEASE_ACCESS_TOKEN }}

    - name: Python Semantic Release
      id: release
      uses: python-semantic-release/python-semantic-release@v8.0.4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
      if: steps.release.outputs.released == 'true'

    - name: Build package
      run: |
        python -m build
      if: steps.release.outputs.released == 'true'

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      if: steps.release.outputs.released == 'true'

    - name: Publish package to GitHub Releases
      uses: python-semantic-release/upload-to-gh-release@main
      if: steps.release.outputs.released == 'true'
      with:
        github_token: ${{ secrets.RELEASE_ACCESS_TOKEN }}

    - name: Enable "include administrators" branch protection
      uses: benjefferies/branch-protection-bot@master
      if: always()
      with:
        access_token: ${{ secrets.RELEASE_ACCESS_TOKEN }}
        branch: ${{ github.event.repository.default_branch }}

  publish:
    name: "Publish CLI image"
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/checkout@v3
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dagger-requirements.txt
      - name: Run Dagger_test.py pipeline
        run: python pipelines/publish.py
        env:
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}
